# LIGHT:
# —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç–µ–π—à–µ–≥–æ —á–∞—Ç-–±–æ—Ç–∞ –≤ Telegram, –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–µ –º–µ–Ω–µ–µ, —á–µ–º –Ω–∞ 3 —Ñ—Ä–∞–∑—ã –∏ 3 –∫–æ–º–∞–Ω–¥—ã.
# PRO:
# —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–∞—Ç-–±–æ—Ç–∞ —Å –Ω–µ–∫–æ—Ç–æ—Ä–æ–π –ª–æ–≥–∏–∫–æ–π. –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–∞—Ç-–±–æ—Ç–∞:
# 1. –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (–º–æ–∂–Ω–æ –≤–Ω–æ—Å–∏—Ç—å –ø–ª–∞–Ω—ã, —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –±–æ—Ç–∞ —á—Ç–æ –ø–æ –ø–ª–∞–Ω—É –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –∏ —Ç.–¥.).

import telebot
from telebot import apihelper
import config
import json, datetime
from dateutil.parser import parse
# from config import TOKEN

# import time
# from multiprocessing.context import Process
import schedule

# import sqlite3 # –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –¥–≤–∏–∂–∫–µ SQLite
# import random
# import time
# import json
# random.seed()
# pip install emoji


TOKEN = config.token

proxies = {
    'http': 'http://51.158.180.179:8811',
    'https': 'http://51.158.180.179:8811',
}

apihelper.proxy = proxies
bot = telebot.TeleBot(TOKEN)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard1 = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False) # –î–µ–ª–∞–µ—Ç —É–∑–∫–∏–µ (True) –∫–Ω–æ–ø–∫–∏ –∏ –ü—Ä—è—á–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –æ–¥–Ω–æ–≥–æ –Ω–∞–∂–∞—Ç–∏—è - True
keyboard1.row('–ü—Ä–∏–≤–µ—Ç', '–ü–æ–∫–∞', '–°–ì–ö', '–ü–æ–º–æ—â—å')


keyboard_sgk = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
keyboard_sgk.row('–£–∑–Ω–∞—Ç—å –ø–ª–∞–Ω—ã', '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å', '–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—á–µ—Ç—ã')

keyboard_ya = telebot.types.InlineKeyboardMarkup()

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
def autor(chatid):
    strid = str(chatid)
    for item in config.users:
        if item == strid:
            return True
    return False

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è json —Ñ–∞–π–ª–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
def add_info(js_path, user_id, date, act):
    try:
        with open(js_path, mode='r', encoding="utf8") as json_file:
            json_data = json.load(json_file)
        print(json_data)
        if len(json_data) < 1:
            print('empty file')
        if user_id not in json_data.keys():
            json_data.update({user_id: []})
        json_data[user_id].append(dict(date=date, action=act))
        # –°–µ–π—á–∞—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∫–∞–∂–¥—ã–π —Ä–∞–∑. –•–æ—á—É —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞ –≤–Ω–µ—à–Ω–∏–π –Ω–æ—Å–∏—Ç–µ–ª—å –±—ã–ª–æ —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏.
        with open(js_path, mode='w', encoding="utf8") as json_file:
             json.dump(json_data, json_file, ensure_ascii=False)
        # json_data.clear() # –æ—á–∏—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å
        return json_data
    except Exception as e:
        print(e)

# –∫–æ–º–º–∞–Ω–¥–∞ start
@bot.message_handler(commands=['start'])
def start_message(message):
    user_name = message.from_user.first_name
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, ' + user_name + '! –Ø —Ä–æ–±–æ—Ç –õ–µ–Ω–∏–Ω. –ù–∞–∂–º–∏ /help, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥. –ò–ª–∏ –≤—ã–±–µ—Ä–∏ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.', reply_markup=keyboard1)

# –∫–æ–º–º–∞–Ω–¥–∞ help
@bot.message_handler(commands=['help'])
def all_commands(message):
    bot.send_message(message.chat.id, '/start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\n/admin - –¥–ª—è –∞–¥–º–∏–Ω–∞\n/help - –ø–æ–º–æ—â—å (—Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥)\n/sgk - —Ä–∞—Å—á–µ—Ç—ã –ø–æ –°–ì–ö\n/search - –ü–æ–∏—Å–∫ –≤ –Ø–Ω–¥–µ–∫—Å\n/geophone - –∑–∞–ø—Ä–æ—Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –≥–µ–æ–¥–∞–Ω–Ω—ã—Ö\n/rm - —É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —Å –º–µ–Ω—é\n/stop - –æ–∫–æ–Ω—á–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã')

# –∫–æ–º–º–∞–Ω–¥–∞ admin
@bot.message_handler(commands=['admin'])
def admin(message):
    user_name = message.from_user.first_name
    if autor(message.chat.id):
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, ' + user_name + '! –ú–æ–π –°–æ–∑–¥–∞—Ç–µ–ª—å!')
        bot.send_sticker(message.chat.id, 'CAADAgAD6CQAAp7OCwABx40TskPHi3MWBA')
    else:
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, ' + user_name + '! –¢—ã –Ω–µ –º–æ–π –•–æ–∑—è–∏–Ω! –¢–≤–æ–π ID: ' + str(message.chat.id))
        bot.send_sticker(message.chat.id, 'CAADAgADcQMAAkmH9Av0tmQ7QhjxLRYE')

# –∫–æ–º–º–∞–Ω–¥–∞ –°–ì–ö (sgk)
@bot.message_handler(commands=['sgk'])
def description(message):
    bot.send_message(message.chat.id, '–†–∞—Å—á–µ—Ç—ã –ø–æ –°–ì–ö. –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.', reply_markup=keyboard_sgk)

# –∫–æ–º–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫ (search)
@bot.message_handler(commands=['search'])
def description(message):
    url_button = telebot.types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –Ø–Ω–¥–µ–∫—Å", url="https://ya.ru")
    keyboard_ya.add(url_button)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π–¥–∏ –≤ –ø–æ–∏—Å–∫–æ–≤–∏–∫.", reply_markup=keyboard_ya)

# –∫–æ–º–º–∞–Ω–¥–∞ stop
@bot.message_handler(commands=['stop'])
def send_something(message):
    bot.send_message(message.chat.id, '–î–∞ —Å–≤–∏–¥–∞–Ω–∏—è! –ü—Ä–∏—è—Ç–Ω–æ –±—ã–ª–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è!')
    bot.send_sticker(message.chat.id, 'CAADAgAD6CQAAp7OCwABx40TskPHi3MWBA')

# –∫–æ–º–º–∞–Ω–¥–∞ geophone
@bot.message_handler(commands=["geophone"])
def geophone(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_phone = telebot.types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚òéÔ∏è", request_contact=True)
    button_geo = telebot.types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ üó∫Ô∏è", request_location=True)
    keyboard.add(button_phone, button_geo)
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Å—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º! –¢–∞–∫ –Ω–∞–º –ª–µ–≥—á–µ –±—É–¥–µ—Ç —Å –í–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è.", reply_markup=keyboard)

# –∫–æ–º–º–∞–Ω–¥–∞ —É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —Å –º–µ–Ω—é
@bot.message_handler(commands=["rm"])
def process_rm_command(message):
    bot.send_message(message.chat.id, "–£–±–∏—Ä–∞–µ–º —à–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, —Ç–æ –Ω–∞–∂–º–∏ /help - –ø–æ–º–æ—â—å (—Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥).", reply_markup=telebot.types.ReplyKeyboardRemove())

@bot.message_handler(content_types=['sticker'])
def sticker_id(message):
    print(message)
    # print(message.from_user.first_name)
    print(message.sticker.emoji)
    print(message.sticker.file_id)
    if message.sticker.set_name == 'PresidentPutin':
        print(message.from_user.first_name)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏—Å–ª–∞–Ω—ã–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ñ–∞–π–ª –≤ —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É - –ø–æ–¥–ø–∞–ø–∫—É received/ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º chat.id
@bot.message_handler(content_types=['document'])
def handle_file(message):
    try:
        file_info = bot.get_file(message.document.file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        src = 'received/' + str(message.chat.id) + message.document.file_name;
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
        bot.send_message(message.chat.id, "–í–∞—à —Ñ–∞–π–ª '" + message.document.file_name + "' –ø–æ–ª—É—á–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω —É –º–µ–Ω—è.")
    except Exception as e:
        bot.reply_to(message, e)

# ‚Äú–ª–æ–≤–∏—Ç‚Äù –æ–Ω —Ç–æ–ª—å–∫–æ —Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω—ã
@bot.edited_message_handler(func=lambda message: True)
def edit_message(message):
    bot.edit_message_text(chat_id=message.chat.id,
                          text= "–í—ã –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª–∏ —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞: '{!s}'".format(message.text),
                          message_id=message.message_id + 1)

@bot.message_handler(content_types=['text'])
def send_text(message):
    # print(message)
    user_name = message.from_user.first_name
    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, '+ user_name + '!')
    elif message.text.lower() == '–ø–æ–∫–∞':
        bot.send_message(message.chat.id, '–ü—Ä–æ—â–∞–π, '+ user_name + '! –ü—Ä–∏—è—Ç–Ω–æ –±—ã–ª–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è!')
        bot.send_sticker(message.chat.id, 'CAADAgAD6CQAAp7OCwABx40TskPHi3MWBA')
    elif message.text.lower() == '—É–∑–Ω–∞—Ç—å –ø–ª–∞–Ω—ã':
        bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –≤—Å–µ —Ä–∞—Å—Å–∫–∞–∂—É.')
    elif message.text.lower() == '–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å':
        user_name = message.from_user.first_name
        if autor(message.chat.id):
            # –ü–æ–∫–∞ —ç—Ç–æ –æ—á–µ–Ω—å —Ä–∞–±–æ—á–∏–π –≤–∞—Ä–∏–∞–Ω—Ç. –ë–µ–∑ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–∞—Ç—ã –∏ —á—Ç–æ –¥–µ–ª–∞—Ç—å –Ω–∞–¥–æ –±—É–¥–µ—Ç.
            print("1:", add_info('personal.json', '127', '2022.09.10', '–∞–Ω–∞–ª–∏–∑'))
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å!')
        else:
            bot.send_message(message.chat.id,
                             '–£ –í–∞—Å, ' + user_name + ', –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é. –î–æ—Å—Ç—É–ø –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –ê–¥–º–∏–Ω—É.')
    elif message.text.lower() == '—Å–¥–µ–ª–∞—Ç—å —Ä–∞—Å—á–µ—Ç—ã':
        bot.send_message(message.chat.id, '–î–∞–≤–∞–π —Å—á–∏—Ç–∞—Ç—å! –ù–æ –ø–æ–∑–∂–µ, –ø–æ–∫–∞ –º–µ–Ω—è —ç—Ç–æ–º—É –Ω–µ –æ–±—É—á–∏–ª–∏. –î–æ—Å—Ç—É–ø –∫ —Ä–∞—Å—á–µ—Ç–∞–º –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ —É –ê–¥–º–∏–Ω–∞.')
    elif message.text.lower() == '–ø–æ–º–æ—â—å':
        bot.send_message(message.chat.id, '/start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\n/admin - –¥–ª—è –∞–¥–º–∏–Ω–∞\n/help - –ø–æ–º–æ—â—å (—Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥)\n/sgk - —Ä–∞—Å—á–µ—Ç—ã –ø–æ –°–ì–ö\n/search - –ü–æ–∏—Å–∫ –≤ –Ø–Ω–¥–µ–∫—Å\n/geophone - –∑–∞–ø—Ä–æ—Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –≥–µ–æ–¥–∞–Ω–Ω—ã—Ö\n/rm - —É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —Å –º–µ–Ω—é\n/stop - –æ–∫–æ–Ω—á–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã')
    # elif message.text.lower() == '—è —Ç–µ–±—è –ª—é–±–ª—é':
    #     bot.send_sticker(message.chat.id, 'CAADAgADZgkAAnlc4gmfCor5YbYYRAI')
    else:
        # message_text = text(emojize('–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ —Å —ç—Ç–∏–º –¥–µ–ª–∞—Ç—å :astonished:'),
        #                     italic('\n–Ø –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–æ–º–Ω—é,'), '—á—Ç–æ –µ—Å—Ç—å',
        #                     code('–∫–æ–º–∞–Ω–¥–∞'), '/help')
        # bot.send_message(message.chat.id, message_text)
        if message.text == 'sticker':
            bot.send_sticker(message.chat.id, 'CAADAgAD6CQAAp7OCwABx40TskPHi3MWBA')
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, —Ç–æ –Ω–∞–∂–º–∏ /help - –ø–æ–º–æ—â—å (—Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥)')

# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –Ω–µ—Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
# @bot.message_handler(content_types=ContentType.ANY)
# def unknown_message(message):
#     message_text = text(emojize('–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ —Å —ç—Ç–∏–º –¥–µ–ª–∞—Ç—å :astonished:'),
#                         italic('\n–Ø –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–æ–º–Ω—é,'), '—á—Ç–æ –µ—Å—Ç—å',
#                         code('–∫–æ–º–∞–Ω–¥–∞'), '/help')
#     bot.send_message(message.chat.id, message_text, parse_mode=ParseMode.MARKDOWN)

try:
    bot.polling(none_stop=True, interval=0)
    while true:
        print ('while true') #–≠—Ç–æ—Ç –ø—Ä–∏–Ω—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç...
        # –î—É–º–∞–ª–∞ —Å—é–¥–∞ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å json –Ω–∞ –≤–Ω–µ—à–Ω–∏–π –Ω–æ—Å–∏—Ç–µ–ª—å.
except:
    pass


# PS
# bot.polling(none_stop=True, interval=0) # –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –≤—ã–∫–ª—é—á–∏–ª—Å—è —Å—Ä–∞–∑—É, –∞ —Ä–∞–±–æ—Ç–∞–ª –∏ –ø—Ä–æ–≤–µ—Ä—è–ª, –Ω–µ—Ç –ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
# bot.infinity_polling() # –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ç.–Ω. Long Polling
# https://habr.com/ru/post/448310/
# –£—á–µ–±–Ω–∏–∫ –ü–∏—à–µ–º –±–æ—Ç–æ–≤ –¥–ª—è Telegram –Ω–∞ —è–∑—ã–∫–µ Python https://mastergroosha.github.io/telegram-tutorial/
# https://flammlin.com/blog/2020/01/19/python-telegram-bot/
# https://surik00.gitbooks.io/aiogram-lessons/content/chapter5.html