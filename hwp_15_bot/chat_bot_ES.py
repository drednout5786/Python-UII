# LIGHT:
# —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç–µ–π—à–µ–≥–æ —á–∞—Ç-–±–æ—Ç–∞ –≤ Telegram, –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–µ –º–µ–Ω–µ–µ, —á–µ–º –Ω–∞ 3 —Ñ—Ä–∞–∑—ã –∏ 3 –∫–æ–º–∞–Ω–¥—ã.
# PRO:
# —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–∞—Ç-–±–æ—Ç–∞ —Å –Ω–µ–∫–æ—Ç–æ—Ä–æ–π –ª–æ–≥–∏–∫–æ–π. –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–∞—Ç-–±–æ—Ç–∞:
# 1. –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (–º–æ–∂–Ω–æ –≤–Ω–æ—Å–∏—Ç—å –ø–ª–∞–Ω—ã, —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –±–æ—Ç–∞ —á—Ç–æ –ø–æ –ø–ª–∞–Ω—É –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –∏ —Ç.–¥.).

import telebot
from telebot import apihelper
import config
import re
import json, datetime
from dateutil.parser import parse

TOKEN = config.token
ADMIN_MAIN_ID = config.users[0]

proxies = config.proxies

apihelper.proxy = proxies
bot = telebot.TeleBot(TOKEN)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
# –î–µ–ª–∞–µ—Ç —É–∑–∫–∏–µ resize_keyboard=True –∫–Ω–æ–ø–∫–∏ –∏ –ü—Ä—è—á–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –æ–¥–Ω–æ–≥–æ –Ω–∞–∂–∞—Ç–∏—è (one_time_keyboard) - True
keyboard1 = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
keyboard1.row('–ü—Ä–∏–≤–µ—Ç', '–ü–æ–∫–∞', '–°–ì–ö', '–ü–æ–º–æ—â—å')


keyboard_sgk = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
keyboard_sgk.row('–£–∑–Ω–∞—Ç—å –ø–ª–∞–Ω—ã', '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å', '–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—á–µ—Ç—ã')

keyboard_ya = telebot.types.InlineKeyboardMarkup()

# –ü–∞—Ç—Ç–µ—Ä–Ω—ã
pattern_date = r'\d{4}.\d{2}.\d{2}'
# [a-zA-Z0-9]+
# r'w+', # –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±—É–∫–≤ –∏–ª–∏ —Ü–∏—Ñ—Ä

# –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –æ—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
path = 'personal.json'

##################################################################################################
# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
def autor(chatid):
    strid = str(chatid)
    for item in config.users:
        if item == strid:
            return True
    return False

# –∫–æ–º–º–∞–Ω–¥–∞ –°–ì–ö (sgk) - –¥–µ–π—Å—Ç–≤–∏–µ
def sgk_command_action(message):
    sgk_date = re.search(pattern_date, message.text)  # –∏—â–µ–º –¥–∞—Ç—É –ø–æ —à–∞–±–ª–æ–Ω—É
    if sgk_date is not None:
        s = sgk_date.start()
        e = sgk_date.end()
        user_id = str(message.chat.id)
        try:
            with open(path, 'r', encoding="utf8") as json_file:
                json_data = json.load(json_file)
            # user_id = str(user_id)
            if user_id not in json_data.keys():
                json_data.update({user_id: []})
            json_data[user_id].append(dict(user_name=message.from_user.first_name,date=message.text[s:e],
                                           action=message.text[e:].strip()))
            with open(path, 'w', encoding="utf8") as json_file:
                json.dump(json_data, json_file, ensure_ascii=False)
                bot.send_message(message.chat.id, '–ë–æ—Ç —Å–æ—Ö—Ä–∞–Ω–∏–ª —Ç–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ù–∞ –¥–∞—Ç—É: ' + message.text[s:e] +
                                 '\n–Ω–∞–º–µ—á–µ–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: ' + message.text[e:].strip(), reply_markup=keyboard_sgk)
        except Exception as e:
            print(e)
    else:
        bot.send_message(message.chat.id, message.from_user.first_name +
                         ', –ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—É—é —Ç–æ–±–æ–π –¥–∞—Ç—É. –ü–æ–≤—Ç–æ—Ä–∏ –≤–≤–æ–¥ –µ—â–µ —Ä–∞–∑. ' +
                         '–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏ –µ—â–µ —Ä–∞–∑ –∫–Ω–æ–ø–∫—É –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∏ –µ—â–µ —Ä–∞–∑ –≤–≤–µ–¥–∏ –∑–∞–¥–∞–Ω–∏–µ.\n' +
                         ' –§–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞: ' + ' –ì–ì–ì–ì.–ú–ú.–î–î –¢–µ–∫—Å—Ç –¥–µ–π—Å—Ç–≤–∏—è.' +
                         '–ò–ª–∏ –Ω–∞–∂–º–∏ /help - –ø–æ–º–æ—â—å (—Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥).')

# –∫–æ–º–º–∞–Ω–¥–∞ start
@bot.message_handler(commands=['start'])
def process_start_command(message):
    user_name = message.from_user.first_name
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, ' + user_name +
                     '! –Ø —Ä–æ–±–æ—Ç –£–º–∫–∞. –ù–∞–∂–º–∏ /help, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥. –ò–ª–∏ –≤—ã–±–µ—Ä–∏ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.',
                     reply_markup=keyboard1)

# –∫–æ–º–º–∞–Ω–¥–∞ help
@bot.message_handler(commands=['help'])
def process_help_command(message):
    bot.send_message(message.chat.id,
                     '/start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\n' +
                     '/admin - –¥–ª—è –∞–¥–º–∏–Ω–∞\n' +
                     '/help - –ø–æ–º–æ—â—å (—Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥)\n' +
                     '/url - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç\n' +
                     '/search - –ü–æ–∏—Å–∫ –≤ –Ø–Ω–¥–µ–∫—Å\n' +
                     '/geophone - –∑–∞–ø—Ä–æ—Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –≥–µ–æ–¥–∞–Ω–Ω—ã—Ö\n' + # –î–∞–Ω–Ω—ã–µ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–∫–∞ –Ω–∏–≥–¥–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è
                     '/rm - —É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —Å –º–µ–Ω—é', reply_markup=keyboard1)

# –∫–æ–º–º–∞–Ω–¥–∞ admin
@bot.message_handler(commands=['admin'])
def admin(message):
    user_name = message.from_user.first_name
    if autor(message.chat.id):
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, ' + user_name + '! –ú–æ–π –°–æ–∑–¥–∞—Ç–µ–ª—å!')
        bot.send_sticker(message.chat.id, 'CAADAgAD6CQAAp7OCwABx40TskPHi3MWBA')
    else:
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, ' + user_name + '! –¢—ã –Ω–µ –º–æ–π –•–æ–∑—è–∏–Ω! –¢–≤–æ–π ID: ' +
                         str(message.chat.id))
        bot.send_sticker(message.chat.id, 'CAADAgADcQMAAkmH9Av0tmQ7QhjxLRYE')

# –∫–æ–º–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫ (search)
@bot.message_handler(commands=['search'])
def process_search_command(message):
    url_button = telebot.types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –Ø–Ω–¥–µ–∫—Å", url="https://ya.ru")
    keyboard_ya.add(url_button)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π–¥–∏ –≤ –ø–æ–∏—Å–∫–æ–≤–∏–∫.", reply_markup=keyboard_ya)

# –∫–æ–º–º–∞–Ω–¥–∞ geophone # –î–∞–Ω–Ω—ã–µ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–∫–∞ –Ω–∏–≥–¥–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è
@bot.message_handler(commands=["geophone"])
def geophone(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_phone = telebot.types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚òéÔ∏è", request_contact=True)
    button_geo = telebot.types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ üó∫Ô∏è", request_location=True)
    keyboard.add(button_phone, button_geo)
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Å—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º!" +
                     " –¢–∞–∫ –Ω–∞–º –ª–µ–≥—á–µ –±—É–¥–µ—Ç —Å –í–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è.", reply_markup=keyboard)

# –∫–æ–º–º–∞–Ω–¥–∞ —É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —Å –º–µ–Ω—é
@bot.message_handler(commands=["rm"])
def process_rm_command(message):
    bot.send_message(message.chat.id, "–£–±—Ä–∞–ª —à–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, —Ç–æ –Ω–∞–∂–º–∏\n" +
                                      "/help - –ø–æ–º–æ—â—å (—Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥).",
                     reply_markup=telebot.types.ReplyKeyboardRemove())

# –∫–æ–º–º–∞–Ω–¥–∞ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç - url
@bot.message_handler(commands = ['url'])
def process_url_command(message):
    markup = telebot.types.InlineKeyboardMarkup()
    btn_my_site = telebot.types.InlineKeyboardButton(text='–ù–∞—à —Å–∞–π—Ç', url='https://www.ranepa.ru')
    markup.add(btn_my_site)
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–µ—Ä–µ–π–¥–∏ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç.", reply_markup=markup)

# –î–µ–π—Å—Ç–≤–∏–µ –ë–æ—Ç–∞, –µ—Å–ª–∏ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª –°—Ç–∏–∫–µ—Ä
@bot.message_handler(content_types=['sticker'])
def sticker_id(message):
    if message.sticker.emoji == 'ü§î': # –°—Ç–∏–∫–µ—Ä —Å –≤–æ–ø—Ä–æ—Å–æ–º
        bot.send_message(message.chat.id, '–ù–∞–∂–º–∏ /help, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥.')
    else:
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAIDG16BpcFCgjXYVVATRCBaxrOd60oFAAIBJQACns4LAAG3W39juSKGHxgE')
    # if message.sticker.set_name == 'PresidentPutin':
    #     bot.send_sticker(message.chat.id, 'CAADAgADZgkAAnlc4gmfCor5YbYYRAI')

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏—Å–ª–∞–Ω—ã–π –æ—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ñ–∞–π–ª –≤ —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É - –ø–æ–¥–ø–∞–ø–∫—É received/ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º chat.id
@bot.message_handler(content_types=['document'])
def handle_file(message):
    try:
        file_info = bot.get_file(message.document.file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        src = 'received/' + str(message.chat.id) + message.document.file_name
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
        bot.send_message(message.chat.id, "–¢–≤–æ–π —Ñ–∞–π–ª '" + message.document.file_name + "' –ø–æ–ª—É—á–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω —É –º–µ–Ω—è.")
    except Exception as e:
        bot.reply_to(message, e)

# ‚Äú–ª–æ–≤–∏—Ç‚Äù –æ–Ω —Ç–æ–ª—å–∫–æ —Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω—ã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
@bot.edited_message_handler(func=lambda message: True)
def edit_message(message):
    bot.edit_message_text(chat_id=message.chat.id,
                          text= "–¢—ã –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞: '{!s}'".format(message.text),
                          message_id=message.message_id + 1)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def send_text(message):
    user_name = message.from_user.first_name

    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, '+ user_name + '!')

    elif message.text.lower() == '–ø–æ–∫–∞':
        keyboard = telebot.types.InlineKeyboardMarkup()
        key_yes = telebot.types.InlineKeyboardButton(text='–î–∞', callback_data='–î–∞')
        keyboard.add(key_yes)
        key_no = telebot.types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='–ù–µ—Ç')
        keyboard.add(key_no)
        bot.send_message(message.from_user.id, '–¢—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—á–µ—à—å –ø–æ–∫–∏–Ω—É—Ç—å —á–∞—Ç —Å–æ –º–Ω–æ–π??', reply_markup=keyboard)

    elif message.text.lower() == '—Å–≥–∫':
        bot.send_message(message.chat.id, '–†–∞–±–æ—Ç–∞ —Å –°–ì–ö. –í—ã–±–µ—Ä–∏ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.', reply_markup=keyboard_sgk)

    elif message.text.lower() == '—É–∑–Ω–∞—Ç—å –ø–ª–∞–Ω—ã':
        date = datetime.datetime.today()
        # print('date = ', date)
        with open(path, mode='r', encoding="utf8") as json_file:
            json_data = json.load(json_file)
        str_all = ''
        for key in json_data.keys():
            for i in range(len(json_data[key])):
                if parse(json_data[key][i]['date']) > date:
                    iter_key = json_data[key][i]
                    str_all = str_all + key + ' ' + iter_key['user_name'] + ' ' + iter_key['date'] + ' ' + \
                              iter_key['action'] + '\n'
        bot.send_message(message.chat.id, '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:\n' + str_all, reply_markup=keyboard_sgk)
        # bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –≤—Å–µ —Ä–∞—Å—Å–∫–∞–∂—É.', reply_markup=keyboard_sgk)

    elif message.text.lower() == '–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å':
        user_name = message.from_user.first_name
        if autor(message.chat.id):
            sent = bot.send_message(message.chat.id,
                                    '–£–∫–∞–∂–∏—Ç–µ –∫–æ–≥–¥–∞ –∏ —á—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì.–ú–ú.–î–î –¢–µ–∫—Å—Ç –¥–µ–π—Å—Ç–≤–∏—è.',
                                    reply_markup=telebot.types.ReplyKeyboardRemove())
            bot.register_next_step_handler(sent, sgk_command_action)
        else:
            bot.send_message(message.chat.id,
                             '–£ —Ç–µ–±—è, ' + user_name + ', –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é. –î–æ—Å—Ç—É–ø –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –ê–¥–º–∏–Ω—É.')

    elif message.text.lower() == '—Å–¥–µ–ª–∞—Ç—å —Ä–∞—Å—á–µ—Ç—ã':
        bot.send_message(message.chat.id, '–î–∞–≤–∞–π —Å—á–∏—Ç–∞—Ç—å! –ù–æ –ø–æ–∑–∂–µ, –ø–æ–∫–∞ –º–µ–Ω—è —ç—Ç–æ–º—É –Ω–µ –æ–±—É—á–∏–ª–∏.\n' +
                         '–ü–æ–∫–∞ —Ç—É—Ç —Å—Ç–æ–∏—Ç –∑–∞–≥–ª—É—à–∫–∞.', reply_markup=keyboard_sgk)

    elif message.text.lower() == '–ø–æ–º–æ—â—å':
        bot.send_message(message.chat.id,
                         '/start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\n' +
                         '/admin - –¥–ª—è –∞–¥–º–∏–Ω–∞\n' +
                         '/help - –ø–æ–º–æ—â—å (—Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥)\n' +
                         '/url - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç\n' +
                         '/search - –ü–æ–∏—Å–∫ –≤ –Ø–Ω–¥–µ–∫—Å\n' +
                         '/geophone - –∑–∞–ø—Ä–æ—Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –≥–µ–æ–¥–∞–Ω–Ω—ã—Ö\n' +
                         '/rm - —É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —Å –º–µ–Ω—é')
    # elif message.text.lower() == '—è —Ç–µ–±—è –ª—é–±–ª—é':
    #     bot.send_sticker(message.chat.id, 'CAADAgADZgkAAnlc4gmfCor5YbYYRAI')

    # –†–µ–∞–∫—Ü–∏—è –ø–æ –î–µ—Ñ–æ–ª—Ç—É
    else:
        bot.send_message(message.chat.id,
                         '–Ø –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, —Ç–æ –Ω–∞–∂–º–∏ /help - –ø–æ–º–æ—â—å (—Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥)')
        # message_text = text(emojize('–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ —Å —ç—Ç–∏–º –¥–µ–ª–∞—Ç—å :astonished:'),
        #                     italic('\n–Ø –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–æ–º–Ω—é,'), '—á—Ç–æ –µ—Å—Ç—å',
        #                     code('–∫–æ–º–∞–Ω–¥–∞'), '/help')

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ –ë–æ—Ç–∞
@bot.callback_query_handler(func=lambda call: True)
def iq_callback(call):
    user_name = call.message.chat.first_name
    if call.data == '–î–∞':
        bot.answer_callback_query(call.id) # —É–±—Ä–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –±–æ—Ç –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
        bot.send_message(call.message.chat.id, '–ü—Ä–æ—â–∞–π, ' + user_name + '! –ü—Ä–∏—è—Ç–Ω–æ –±—ã–ª–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è!')
        bot.send_sticker(call.message.chat.id, 'CAADAgAD6CQAAp7OCwABx40TskPHi3MWBA')
    else:
        bot.answer_callback_query(call.id)
        bot.send_message(call.message.chat.id, '–£—Ä–∞! ' + user_name + ', –¥–∞–≤–∞–π –ø—Ä–æ–¥–æ–ª–∂–∏–º! :)')

###########################################################################################################
# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ë–æ—Ç–∞
try:
    bot.polling(none_stop=True, interval=0)
    # –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –≤—ã–∫–ª—é—á–∏–ª—Å—è —Å—Ä–∞–∑—É, –∞ —Ä–∞–±–æ—Ç–∞–ª –∏ –ø—Ä–æ–≤–µ—Ä—è–ª, –Ω–µ—Ç –ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
except:
    pass
###########################################################################################################

# PS
# bot.infinity_polling() # –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ç.–Ω. Long Polling
# https://habr.com/ru/post/448310/
# –£—á–µ–±–Ω–∏–∫ –ü–∏—à–µ–º –±–æ—Ç–æ–≤ –¥–ª—è Telegram –Ω–∞ —è–∑—ã–∫–µ Python https://mastergroosha.github.io/telegram-tutorial/
# https://flammlin.com/blog/2020/01/19/python-telegram-bot/
# https://surik00.gitbooks.io/aiogram-lessons/content/chapter5.html
# https://www.cyberforum.ru/python-web/thread2514386.html
# print("1:", add_info('personal.json', '127', '2022.09.10', '–∞–Ω–∞–ª–∏–∑'))
# https://pythonru.com/primery/python-telegram-bot#-6-exchange

# –ö–∞–ª–µ–Ω–¥–∞—Ä—å https://habr.com/ru/post/335886/